pipeline {
    agent any

    environment {
        DOCKERHUB_USER        = "asha12345"                   
        IMAGE_NAME            = "${DOCKERHUB_USER}/test"      
        IMAGE_TAG             = "latest"                      
        DOCKERHUB_CREDENTIALS = "dockerhub-cred"              
        CONTAINER_NAME        = "test-container"
        HOST_PORT             = "8089"
        CONTAINER_PORT        = "8089"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/sravani3377/test.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${IMAGE_NAME}:${IMAGE_TAG}")
                }
            }
        }

        stage('Run Container on 8089') {
            steps {
                script {
                    // Stop and remove old container if exists
                    sh """
                        docker ps -aq --filter "name=${CONTAINER_NAME}" | grep -q . && docker rm -f ${CONTAINER_NAME} || true
                    """
                    // Run new container with port mapping
                    sh """
                        docker run -d --name ${CONTAINER_NAME} -p ${HOST_PORT}:${CONTAINER_PORT} ${IMAGE_NAME}:${IMAGE_TAG}
                    """
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', env.DOCKERHUB_CREDENTIALS) {
                        dockerImage.push()                          
                        dockerImage.push("${env.BUILD_NUMBER}")     
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline finished successfully!"
        }
    }
}

